import { SecurityService } from "./SecurityService";
import { BalanceService } from "./BalanceService";
import { BaseService } from "./BaseService";
import { NftService } from "./NftService";
import { PricingService } from "./PricingService";
import { TransactionService } from "./TransactionService";
import { XykService } from "./XykService";
export const userAgent = "com.covalenthq.sdk.typescript/0.4.2";
export class Response {
}
/**
 * CovalentClient Class
 */
export class CovalentClient {
    constructor(apiKey, settings) {
        const { debug = false, threadCount = 3 } = settings || {};
        this.SecurityService = new SecurityService(apiKey, debug, threadCount);
        this.BalanceService = new BalanceService(apiKey, debug, threadCount);
        this.BaseService = new BaseService(apiKey, debug, threadCount);
        this.NftService = new NftService(apiKey, debug, threadCount);
        this.PricingService = new PricingService(apiKey, debug, threadCount);
        this.TransactionService = new TransactionService(apiKey, debug, threadCount);
        this.XykService = new XykService(apiKey, debug, threadCount);
    }
}
/**
 * @deprecated
 * Please use {@link CovalentClient} going forward! This method will be removed after Oct 31, 2023.
 * @see #CovalentClient
 * CovalentClient Class
 */
export class Client {
    constructor(apiKey, settings) {
        const { debug = false, threadCount = 3 } = settings || {};
        this.SecurityService = new SecurityService(apiKey, debug, threadCount);
        this.BalanceService = new BalanceService(apiKey, debug, threadCount);
        this.BaseService = new BaseService(apiKey, debug, threadCount);
        this.NftService = new NftService(apiKey, debug, threadCount);
        this.PricingService = new PricingService(apiKey, debug, threadCount);
        this.TransactionService = new TransactionService(apiKey, debug, threadCount);
        this.XykService = new XykService(apiKey, debug, threadCount);
    }
}
//# sourceMappingURL=CovalentClient.js.map